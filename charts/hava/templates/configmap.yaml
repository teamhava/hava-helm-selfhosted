apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hava.fullname" . }}-environment
  labels:
    app.kubernetes.io/name: {{ include "hava.name" . }}
    helm.sh/chart: {{ include "hava.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  PLATFORM: kubernetes
  NAME: {{ include "hava.fullname" . | quote }}
  LICENCE_FILE: /hava/license/license
  LOG_LEVEL: {{ .Values.environment.log_level | quote }}

  AUTO_SYNC_ENABLED: "true"
  AUTO_SYNC: {{ .Values.import.auto_sync.enabled | quote }}
  AUTO_SYNC_COUNT: {{ .Values.import.auto_sync.count | quote }}
  AUTO_SYNC_MINUTES: {{ .Values.import.auto_sync.minutes | quote }}

  PROVIDER_AZURE_ENABLED: "true"
  AZURE_ENVIRONMENT: {{ .Values.azure.environment | quote }}

  PROVIDER_AWS_CAR_ENABLED: "true"
  CAR_ACCOUNT_ID: {{ .Values.import.aws.account_id | quote }}
  CAR_USER_ACCESS_KEY: {{ .Values.import.aws.access_key | quote }}

  RENDER_STORAGE_TYPE: {{ .Values.render.storage_type | quote }}
  RENDER_STORAGE_PREFIX: {{ .Values.render.storage_prefix | quote }}
  EMBEDDABLE_STORAGE_TYPE: {{ .Values.render.storage_type | quote }}
  EMBEDDABLE_STORAGE_PREFIX: {{ .Values.render.storage_prefix | quote }}

  {{- if eq (.Values.render.storage_type | upper) "S3"}}
  RENDER_S3_ACCESS_KEY_ID: {{ .Values.render.aws.access_key | quote }}
  RENDER_STORAGE_LOCATION: {{ .Values.render.aws.bucket | quote }}
  RENDER_STORAGE_REGION: {{ .Values.render.aws.region | quote }}

  EMBEDDABLE_STORAGE_LOCATION: {{ .Values.render.aws.bucket | quote }}
  EMBEDDABLE_STORAGE_REGION: {{ .Values.render.aws.region | quote }}
  {{- end}}

  {{- if eq (.Values.render.storage_type | upper) "AZURE-BLOB" }}
  RENDER_STORAGE_LOCATION:  {{ .Values.render.azure.blob_container | quote }}
  RENDER_AZURE_STORAGE_ACCOUNT_NAME: {{ .Values.render.azure.storage_account | quote }}
  RENDER_AZURE_STORAGE_ACCESS_KEY: {{ .Values.render.azure.access_key | quote }}

  EMBEDDABLE_STORAGE_LOCATION: {{ .Values.render.azure.blob_container | quote }}
  {{- end}}

  # Application URLs
  {{ if eq .Values.environment.ssl "true" }}
  HAVA_HOST: "https://{{ .Values.environment.web_subdomain }}.{{ .Values.environment.domain }}"
  {{ else }}
  HAVA_HOST: "http://{{ .Values.environment.web_subdomain }}.{{ .Values.environment.domain }}"
  {{ end }}
  COOKIE_DOMAIN: ".{{ .Values.environment.domain }}"
  {{ if eq .Values.environment.ssl "true" }}
  API_SCHEME: "https"
  {{ else }}
  API_SCHEME: "http"
  {{ end }}
  API_HOST: "{{ .Values.environment.web_subdomain}}.{{ .Values.environment.domain }}"
  {{ if eq .Values.environment.ssl "true" }}
  API_PORT: "443"
  {{ else }}
  API_PORT: "80"
  {{ end }}
  API_PATH: "/"

  # Connection URLs (contains secrets ðŸ¤«)
  {{- if .Values.elasticsearch.host }}
  ELASTICSEARCH_URL: "http://{{ .Values.elasticsearch.host }}:9200"
  {{- else }}
  ELASTICSEARCH_URL: "http://elasticsearch-master:9200"
  {{- end }}

  {{- if .Values.cache.host }}
  REDIS_URL: "redis://{{ .Values.cache.host }}:6379"
  {{- else }}
  REDIS_URL: "redis://{{ include "hava.fullname" . }}-redis:6379"
  {{- end }}

  {{ if eq .Values.environment.ssl "true" }}
  WEBSOCKET_URL: "https://hava:hava@{{ include "hava.webHostName" . }}:443/apps/1"
  {{ else }}
  WEBSOCKET_URL: "http://hava:hava@{{ include "hava.webHostName" . }}:80/apps/1"
  {{ end }}

  # Puma
  WEB_CONCURRENCY: {{ .Values.web.concurrency | quote }}
  WEB_THREADS: {{ .Values.web.threads | quote }}

  # Execution and lifetime settings
  CONCURRENCY_WEB: {{ .Values.web.concurrency | quote }}
  CONCURRENCY_COMBINED_WORKERS: {{ .Values.workers.concurrency | quote }}
  POOL_ALERT: {{ .Values.workers.pool | quote }}

  # Share and embed config - port is 443
  EMBEDDABLE_TYPE: "s3"

  # Email
  {{- if .Values.email.smtp.user }}
  SMTP_USER: {{ .Values.email.smtp.user | quote }}
  {{- else }}
  SMTP_ANONYMOUS: "true"
  {{- end }}
  SMTP_ADDRESS: {{ .Values.email.smtp.endpoint | quote }}
  SMTP_PORT: {{ .Values.email.smtp.port | quote }}
  SMTP_DOMAIN: {{ .Values.email.smtp.domain | quote }}
  EMAIL_FROM_ADDRESS: {{ .Values.email.smtp.from_address | quote }}
  EMAIL_FROM_NAME: {{ .Values.email.smtp.from_name | quote }}

  {{ if .Values.environment.cors_hosts }}
  CORS_HOSTS: {{ .Values.environment.cors_hosts | quote }}
  {{ end }}
  CORS_ENABLED: {{ .Values.environment.cors_enabled | quote }}

  {{ if .Values.environment.auth0.enabled }}
  AUTH_TYPE: "auth0"
  AUTH0_ENABLED: "true"
  AUTH0_HOST: {{ .Values.environment.auth0.host | quote }}
  AUTH0_ID: {{ .Values.environment.auth0.id | quote }}
  AUTH0_CONNECTION: {{ .Values.environment.auth0.connection | quote }}
  {{ end }}

  # AWS
  {{- if .Values.aws.regions }}
  AWS_REGIONS: {{ .Values.aws.regions | quote }}
  {{- end }}
  {{- if .Values.aws.govcloud_enabled }}
  AWS_GOVCLOUD_SUPPORT: "true"
  {{- end }}

  {{- if .Values.import.aws.use_sa_role }}
  CAR_USE_INSTANCE_PROFILE: "true"
  {{- end }}
  {{- if .Values.render.aws.use_sa_role }}
  RENDER_S3_USE_INSTANCE_PROFILE: "true"
  {{- end }}

  {{- if .Values.environment.proxy }}
  HTTP_PROXY: {{ .Values.environment.proxy | quote }}
  {{- end }}
