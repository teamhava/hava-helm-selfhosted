{{- if .Values.storage.enable }}
{{- if eq (.Values.storage.type | upper) "LOCAL" }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hava-ssd
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer

# local does not support dynamic provisioning, so we have to create a perstent volume manually
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv0003
spec:
  capacity: 
    storage: 5Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  storageClassName: hava-ssd
  local:
    path: /tmp
  nodeAffinity:
    required: 
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - docker-desktop #todo: figure out a better way to do this

{{- end }}

{{- if eq (.Values.storage.type | upper ) "GCP" }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hava-ssd
provisioner: kubernetes.io/gce-pd
allowVolumeExpansion: true
parameters:
  type: pd-ssd
  fstype: ext4
  replication-type: none
{{- end }}

{{- if eq (.Values.storage.type | upper)  "AWS" }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hava-ssd
provisioner: kubernetes.io/aws-ebs
allowVolumeExpansion: true
parameters:
  type: io1
  iopsPerGB: "10"
  fsType: ext4
{{- end }}

{{- if eq (.Values.storage.type | upper)  "AZURE" }}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: hava-ssd
provisioner: kubernetes.io/azure-disk
allowVolumeExpansion: true
parameters:
  storageaccounttype: Standard_LRS
  kind: managed
{{- end }}
{{- end }}